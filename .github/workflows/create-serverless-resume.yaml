name: Serverless Resume Creation Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
jobs:
  build:
    name: Install required software
    runs-on: self-hosted

    env:
      PYTHON_PATH: 'python-update-dns/requirements.txt'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10' 

    - name: Create Python virtual env
      run: |
        python -m venv ${{ env.PYTHON_PATH }}/env
        source ${{ env.PYTHON_PATH }}/env/bin/activate

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ${{ env.PYTHON_PATH }}/requirements.txt

  run-terraform:
    name: Run terraform apply
    runs-on: self-hosted

    env:
      DOMAIN: 'peter.griffin-resume.com'
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CF_API_EMAIL: ${{ secrets.CF_API_EMAIL }}
      CF_API_KEY: ${{ secrets.CF_API_KEY }}
      CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}

    needs: build

    steps:
    - name: Set DOMAIN based on branch name
      run: |
        if [ "$GITHUB_REF" != "refs/heads/main" ]; then
          echo "Setting DOMAIN for pull request"
          export DOMAIN="${{ github.event.pull_request.head.ref }}.griffin-resume.com"
        fi
      shell: bash

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -var="custom_domain=${DOMAIN}"

    - name: Terraform Apply
      run: terraform apply -auto-approve -var="custom_domain=${DOMAIN}"